name: build-release-latest
on:
  push:
    tags-ignore: 'v*'
    branches: '!master'

env:
  python_win_version: 3.10.8
  repo_dir: nagstamon-jekyll/docs/repo

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install libdbus-1-dev libkrb5-dev
        python -m pip install --upgrade pip
        pip install pytest pylint wheel #flake8
        if [ -f build/requirements/linux.txt ]; then pip install -r build/requirements/linux.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest tests/test_*.py

  windows-64:
    # better depend on stable build image
    runs-on: windows-2019
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.python_win_version }}
          architecture: x64
      - run: python -m pip install --no-warn-script-location -r build/requirements/windows.txt
      # pretty hacky but no other idea to avoid gssapi being installed which breaks requests-kerberos
      - run: python -m pip uninstall -y gssapi requests-gssapi
      - run: cd ${{ github.workspace }}/build; python build.py
        env:
          PYTHONPATH: ${{ github.workspace }}
      - uses: actions/upload-artifact@v3
        with:
          path: |
            build/dist/*.zip
            build/dist/*.exe
          retention-days: 1
          if-no-files-found: error

  github-release:
    runs-on: ubuntu-latest
    needs: [windows-64]
    steps:
      - uses: actions/download-artifact@v3
      - run: cd artifact && md5sum *agstamon* > md5sums.txt
      - run: cd artifact && sha256sum *agstamon* > sha256sums.txt
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: |
            artifact/*
